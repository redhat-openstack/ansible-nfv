{
  "comments": [
    {
      "key": {
        "uuid": "ad8836dd_40cfc34e",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_perf_scenarios.yml",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T06:20:15Z",
      "side": 1,
      "message": "This is not an optimal way to write the tests. The tests should be provided in a loop which should be adaptable in this playbook. If there are any restrictions in the import_playbook with loop, then introduce a role to specific to multi-queue testing.",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7a9576d_93d90940",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_perf_scenarios.yml",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T07:23:47Z",
      "side": 1,
      "message": "Saravanan,\n\nIn Ansible, import playbook with loop is not supported. already i have tried using the roles with looping but faced delegate_to multi level tasks could not get the right host name and failing existing tasks and also performance scenario tasks duplicated in multiple playbooks.\n\nalso tried using jinja2 to generate the required playbook to avoid import playbook duplication but changed later due to best practices",
      "parentUuid": "ad8836dd_40cfc34e",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6185c7a_fbbb7edc",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_perf_scenarios.yml",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T08:35:03Z",
      "side": 1,
      "message": "IMO, this is not a preferred approach to have maintanable code. I think we need to figure out a solution for this problem. We can discuss in detail one all other comments are addressed.",
      "parentUuid": "d7a9576d_93d90940",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d42325d1_b9b1259d",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_perf_scenarios.yml",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T08:55:00Z",
      "side": 1,
      "message": "Different approaches tried,\n\n1) using role and looping roles. issues: getting correct play host is wrong when using delete_to when moving performance scenario pre_tasks as part of new role. (Already tried patch 2).\n\n2) Reusing and importing existing performance playbook in each scenario.\n\nIf approach 1, we need to fix the issues due to delegate_to in existing performance tasks and extract the common performance scenario code into new role. we need to test all the performance scenarios.\n\nShall we discuss and finalize the approach?",
      "parentUuid": "e6185c7a_fbbb7edc",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c92a7cde_82a3f711",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_perf_scenarios.yml",
        "patchSetId": 13
      },
      "lineNbr": 11,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-19T05:13:18Z",
      "side": 1,
      "message": "Thanks Jagan for clarity. Without rewriting all the roles, we cannot achieve such a behavior with delegate_to and it is not an effective approach. I agree. In that case, instead of having test1, test2., can we similfy the vars and directly provide the vars itself in this file. That way, when a new test cases need to be added, it has to be added in this file only? And some comments about the test case will be helpful too.",
      "parentUuid": "d42325d1_b9b1259d",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4540b445_fcbd2c11",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T06:20:15Z",
      "side": 1,
      "message": "I dont understand why there are muliple plays all witht the same host (dut_compute). Why not add it to single play itself? It can have multiple play only when the hosts change, like using undercloud then dut_compute and then undercloud, but there is no use in having it with the same host.",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e90249a_f42499de",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T07:23:47Z",
      "side": 1,
      "message": "Grouped as multiple steps, like common preparation, clean up, multiqueue setup and performance run.\nAgree, we can also update as grouping this multiple plays as single play with same host.",
      "parentUuid": "4540b445_fcbd2c11",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "307f2cf6_4668b882",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T08:35:03Z",
      "side": 1,
      "message": "You should use \"block\" instead of a separate play.",
      "parentUuid": "5e90249a_f42499de",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23623697_2b509ca7",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T08:55:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "307f2cf6_4668b882",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "458a7440_75f7673b",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 4,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T06:20:15Z",
      "side": 1,
      "message": "Why not \"tasks\"? pre_tasks are used generally with \"roles:\" to have pre tasks before the role. But even that can be overcome with the newer syntax of \"include_role\" inside the tasks. I don\u0027t see a need to use \"pre_tasks\" at all.",
      "range": {
        "startLine": 4,
        "startChar": 2,
        "endLine": 4,
        "endChar": 11
      },
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db3469a7_a510cc95",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 4,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T07:23:47Z",
      "side": 1,
      "message": "Used similar like performance scenario\u0027s, also tried using tasks but had ansible error. will check once again.",
      "parentUuid": "458a7440_75f7673b",
      "range": {
        "startLine": 4,
        "startChar": 2,
        "endLine": 4,
        "endChar": 11
      },
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de791432_816674f5",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 4,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T08:35:03Z",
      "side": 1,
      "message": "Yes, I  might have missed to review the perferomance scenarios, but do address it, There is no need for pre_tasks are we are not using roles directly (role is always used in the newer syntax via include_role)",
      "parentUuid": "db3469a7_a510cc95",
      "range": {
        "startLine": 4,
        "startChar": 2,
        "endLine": 4,
        "endChar": 11
      },
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8f73789_7749028f",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 4,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T08:55:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "de791432_816674f5",
      "range": {
        "startLine": 4,
        "startChar": 2,
        "endLine": 4,
        "endChar": 11
      },
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f91fca8_a35c16a8",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 39,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T06:20:15Z",
      "side": 1,
      "message": "Why are the facts applied on the undercloud? Any specific reason?",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90162353_dd138a26",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 39,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T07:23:47Z",
      "side": 1,
      "message": "Yes, just for invoking and reusing the existing performance playbook from the undercloud host.",
      "parentUuid": "4f91fca8_a35c16a8",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c9b1a8b_780f54af",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 39,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T08:35:03Z",
      "side": 1,
      "message": "This approach is not optimal. Isn\u0027t there a better way to do it, something like passing approriate vars while invoking? Irrespective of it, why do we need to set_facts on undercloud in the middle of the play, can be moved as first step?",
      "parentUuid": "90162353_dd138a26",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38686c62_72a0bb05",
        "filename": "playbooks/packet_gen/trex/nfv_multiqueue_performance.yml",
        "patchSetId": 13
      },
      "lineNbr": 39,
      "author": {
        "id": 1015848
      },
      "writtenOn": "2020-08-18T08:55:00Z",
      "side": 1,
      "message": "Ack, we can move this as first step.\n\nActually, We can do this step in two ways, either using new flavors var in each performance run or using common flavors var with updating the required parameters and setting as facts on undercloud to assign to var for flavors in performance scenario playbook.",
      "parentUuid": "9c9b1a8b_780f54af",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eccaf36f_c8d411a5",
        "filename": "samples/multiqueue_test_cases.yaml",
        "patchSetId": 13
      },
      "lineNbr": 6,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T08:35:03Z",
      "side": 1,
      "message": "why do you expect the mask to be provided as input? can a filter be created like cpu_mask in tripleo-ansible?",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 6,
        "endChar": 17
      },
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfd9abd4_a106a541",
        "filename": "samples/multiqueue_test_cases.yaml",
        "patchSetId": 13
      },
      "lineNbr": 31,
      "author": {
        "id": 1010167
      },
      "writtenOn": "2020-08-18T08:35:03Z",
      "side": 1,
      "message": "Why not just take the count and generate the required output as we need? Lets use ansible to be maximum extent and reduce user inputs. Understand what are the possible variable factors in the multi-queue test and get it as input (instead of the whole trex cfg template).",
      "revId": "977e1851105a8389ac034c5937b5e835223f21b2",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}