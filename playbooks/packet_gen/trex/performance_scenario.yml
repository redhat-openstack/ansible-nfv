---
- name: HCI tasks
  hosts: "{{ dut_compute }}"
  gather_facts: False
  roles:
    - roles/post_install/hci_tasks

- hosts: undercloud
  gather_facts: False
  pre_tasks:
    - name: Require Resource Method
      fail:
        msg: "cloud_resources is not set to correct values: 'create' or 'external', please refer to documentation"
      when: cloud_resources is not defined or cloud_resources not in ['create', 'external']

    - name: Gets HCI Instances limit per compute
      set_fact:
        hci_guest_limit: "{{ hostvars[dut_compute]['guest_limit'] | int }}"
      when: launch_hci_stress | default(False)

    - block:
        - name: Generate Resources
          vars:
            guest_count: "{{ hci_guest_limit] | int }}"
          import_role:
            name: roles/post_install/openstack_tasks

        # Workaround for adding generated instances to dynamic inventory
        - meta: refresh_inventory

        - name: Map Instances To Helper Variable
          set_fact:
            generated_instances: >-
              {{ generated_instances | default([]) }} + [{'name': '{{ item['name'] }}',
              'group': '{{ item['groups'] }}',
              'user': '{{ connection_user }}',
              'ssh_key': '/tmp/{{ item['key_name'] }}.key' }]
          loop: "{{ instances }}"

        - name: Map HCI Instances To Helper Variable
          set_fact:
            generated_hci_instances: >-
              {{ generated_hci_instances | default([]) }} + [{'name': '{{ dynamic_hci_instance.name }}-hciinstance-{{ count }}',
              'group': '{{ dynamic_hci_instance.group }}',
              'user': '{{ dynamic_hci_instance.user }}',
              'ssh_key': '{{ dynamic_hci_instance.ssh_key }}' }]
          with_sequence: start=1 end={{ hci_guest_limit }} stride=1 format=%02x
          loop_control:
            loop_var: count

        - name: Update dynamic instances using generated HCI instances
          set_fact:
            all_instances: >-
              {{ generated_instances | default([]) }} + {{ generated_hci_instances | default([]) }}

        - name: Workaround - Add Generated Instances To Dynamic Inventory
          include_role:
            name: roles/post_install/dynamic_host_inventory
          vars:
            discover_instance_external_ip: True
          loop: "{{ all_instances }}"
      when: cloud_resources == 'create'

    - name: Use Pre-exisisting Resources
      block:
        - name: Prepare Virtual Environment
          vars:
            guest_count: "{{ hci_guest_limit | int }}"
          include_role:
            name: roles/post_install/openstack_tasks
            tasks_from: setup_openstack_env

        - name: Map HCI Instances To Helper Variable
          set_fact:
            generated_hci_instances: >-
              {{ generated_hci_instances | default([]) }} + [{'name': '{{ dynamic_hci_instance.name }}-hciinstance-{{ count }}',
              'group': '{{ dynamic_hci_instance.group }}',
              'user': '{{ dynamic_hci_instance.user }}',
              'ssh_key': '{{ dynamic_hci_instance.ssh_key }}' }]
          with_sequence: start=1 end={{ hci_guest_limit }} stride=1 format=%02x
          loop_control:
            loop_var: count
          when: launch_hci_stress | default(False)

        - name: Update dynamic instances using generated HCI instances
          set_fact:
            all_instances: >-
              {{ dynamic_instances | default([]) }} + {{ generated_hci_instances | default([]) }}
          when: launch_hci_stress | default(False)

        - name: Add Pre-existing Instances To Dynamic Inventory
          include_role:
            name: roles/post_install/dynamic_host_inventory
          loop: "{{ all_instances }}"
      when: cloud_resources == 'external'

- hosts: "{{ dut_compute }}"
  become: true
  roles:
    - role: roles/packet_gen/trex/compute_tuning

- hosts: "{{ hci_group }}"
  roles:
    - role: roles/packet_gen/trex/launch_fio
      when: launch_hci_stress | default(True)

- hosts: trex
  roles:
    - role: roles/packet_gen/trex/trex_instance_config
      when: trex_instance_config | default(True)

# TODO (vkhitrin): Make it skippable
- hosts: "{{ dut_group }}"
  roles:
    - role: roles/packet_gen/trex/bind_dpdk_nics
      vars:
        discover_dut_macs: True
      when: bind_dpdk_nics | default(True)

    - role: roles/packet_gen/trex/launch_testpmd
      when: launch_testpmd | default(True)

- hosts: trex
  roles:
    - role: roles/packet_gen/trex/bind_dpdk_nics
      when: bind_dpdk_nics | default(True)

    - role: roles/packet_gen/trex/launch_trex
      when: launch_trex | default(True)

    - role: roles/packet_gen/trex/binary_search
      when: binary_search | default(True)
