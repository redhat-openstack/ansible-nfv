---

- name: Remove parameter from grub if it exists
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX=(.* ){{ item.regex }}([a-zA-Z0-9-,]*)\s*(.*)'
    line: 'GRUB_CMDLINE_LINUX=\1\3'
    mode: '0644'
    state: present
    backrefs: yes
  loop:
    - { regex: 'isolcpus=', context: '{{ cpu_pinning_cores }}' }
    - { regex: 'hugepagesz=', context: '{{ hugepages_size }}' }
    - { regex: 'default_hugepagesz=', context: '{{ hugepages_size }}' }
    - { regex: 'transparent_hugepage=', context: 'never' }
    - { regex: 'hugepages=', context: '{{ hugepages_count }}' }

- name: Add parameter to grub even  if it didnt exist before
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX="(.*)"'
    line: 'GRUB_CMDLINE_LINUX="\1 {{ item.regex }}{{ item.context }}"'
    mode: '0644'
    state: present
    backrefs: yes
  loop:
    - { regex: 'isolcpus=', context: '{{ cpu_pinning_cores }}' }
    - { regex: 'hugepagesz=', context: '{{ hugepages_size }}' }
    - { regex: 'default_hugepagesz=', context: '{{ hugepages_size }}' }
    - { regex: 'transparent_hugepage=', context: 'never' }
    - { regex: 'hugepages=', context: '{{ hugepages_count }}' }
  register: grub

- name: Set the cores to isolate
  lineinfile:
    dest: '/etc/tuned/cpu-partitioning-variables.conf'
    regexp: 'isolated_cores='
    line: 'isolated_cores={{ cpu_pinning_cores }}'
    backrefs: yes
    state: present
  register: isolcpu_set

- name: Activate the profile
  command: "/usr/sbin/tuned-adm profile cpu-partitioning"
  when: isolcpu_set.changed

- name: Make grub
  command: "grub2-mkconfig -o /boot/grub2/grub.cfg"
  when: grub.changed
  register: makegrub

- name: Restart server
  shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  failed_when: False
  when: makegrub.changed

- name: Wait for server to restart successfully
  wait_for_connection:
    timeout: 300
    delay: 5
