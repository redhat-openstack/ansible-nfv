---

- name: Get Cloud variables
  shell: |
    for key in $(set | awk '{FS="="} /^OS_/ {print $1}'); do unset $key; done
    source {{ item.0 }}
    echo -n "{{ item.1 }}: {'auth': { 'auth-url': '$OS_AUTH_URL', 'username': '$OS_USERNAME', 'password': '$OS_PASSWORD', 'project-name': '${OS_PROJECT_NAME:-$OS_TENANT_NAME}' }}"
  with_together:
    - ["{{ tripleo_undercloud_file }}", "{{ tripleo_overcloud_file }}"]
    - ['undercloud', 'overcloud']
  register: cloud_details

- name: Create clouds.yaml if doesn't exist
  blockinfile:
    content: 'clouds:'
    dest: "~/clouds.yaml"
    marker: "#{mark} HEADER"
    create: yes

- name: Insert cloud parameters
  blockinfile:
    dest: "~/clouds.yaml"
    block: |1
      {{ item.stdout|from_yaml|to_nice_yaml(indent=4) }}
    insertbefore: "#END {{ item.item.1 }} SECTION"
    marker: "#{mark} {{ item.item.1 }} PARAMETERS"
  with_items: "{{ cloud_details.results }}"

- name: Install requirements for pip virtualenv
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - 'python-devel'
    - 'python-setuptools'
    - 'gcc'
    - 'libffi-devel'
  become: true

- name: Install pip package
  easy_install:
    name: pip
  become: true

- name: Delete existing venv if exists
  file:
    path: "{{ venv_path }}"
    state: absent

- name: Install virtualenv
  pip:
    name: virtualenv
    version: '15.1.0'

- name: Create virtualenv
  pip:
    name: "{{ item.key }}"
    version: "{{ item.value }}"
    virtualenv: "{{ venv_path }}"
  with_dict:
    pip: '9.0.1'
    setuptools: '38.2.4'
    pytz: '2017.3'
    shade: '1.25.0'
