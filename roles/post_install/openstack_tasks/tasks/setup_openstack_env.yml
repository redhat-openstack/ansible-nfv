---
- name: Gather facts
  setup:

# Delete the venv in order to avoid packages conflicts
- name: Delete existing venv if exists
  file:
    path: "{{ venv_path }}"
    state: absent
  become: true

- name: Install required packages
  vars:
    os_version: "{%- if ansible_distribution_major_version == '8' -%}
                 rhel8
                 {%- elif ansible_distribution_major_version == '7' -%}
                 rhel7
                 {%- endif -%}"
    pkg_ver_list: "{{ packages[os_version] }}"
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ pkg_ver_list | flatten(levels=1) }}"
  become: true

- block:
    - name: Install pip package
      easy_install:
        name: pip
      become: true

# The version of virtualenv hardcoded because python 2 has issues installing latest version of dependencies for the virtualenv.
    - name: Install venv if python2 present
      pip:
        name: virtualenv
        version: '16.7.9'
      become: true
  when: ansible_python.version.major == 2

# A pip bug prevents us to use the pip module for the python3 venv creation.
# Remove when fixed.
# Reference: https://github.com/ansible/ansible/issues/52275
- name: Install venv if python3 present
  command: "{{ ansible_python.executable }} -m venv {{ venv_path }}"
  when: ansible_python.version.major == 3

# Install pip and setuptools should happen before other rpackages
- name: Install virtualenv packages
  pip:
    name:
      - pip>=10.0.1
      - setuptools>=39.0.0
      - openstacksdk>=0.39,<0.40.0 ; python_version < '3'
      - openstacksdk>=0.39 ; python_version >= '3'
    virtualenv: "{{ venv_path }}"

- name: Generate clouds.yaml file
  import_tasks: clouds.yml
