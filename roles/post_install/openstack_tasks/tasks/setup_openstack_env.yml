---

- name: Get Cloud variables
  shell: |
    for key in $(set | awk '{FS="="} /^OS_/ {print $1}'); do unset $key; done
    source {{ item.0 }}
    echo -n "{{ item.1 }}: {'auth': { 'auth-url': '$OS_AUTH_URL', 'username': '$OS_USERNAME', 'password': '$OS_PASSWORD', 'project-name': '${OS_PROJECT_NAME:-$OS_TENANT_NAME}' }}"
  with_together:
    - ["{{ tripleo_undercloud_file }}", "{{ tripleo_overcloud_file }}"]
    - ['undercloud', 'overcloud']
  register: cloud_details

- name: Create clouds.yaml if doesn't exist
  blockinfile:
    content: 'clouds:'
    dest: "~/clouds.yaml"
    marker: "#{mark} HEADER"
    create: yes

- name: Insert cloud parameters
  blockinfile:
    dest: "~/clouds.yaml"
    block: |1
      {{ item.stdout|from_yaml|to_nice_yaml(indent=4) }}
    insertbefore: "#END {{ item.item.1 }} SECTION"
    marker: "#{mark} {{ item.item.1 }} PARAMETERS"
  with_items: "{{ cloud_details.results }}"

- name: Install packages and dependency
  become: True
  yum:
    name: "{{ item.name }}"
    state: 'installed'
  with_items:
    - { name: 'git' }
    - { name: 'wget' }
    - { name: 'python-devel' }
    - { name: 'gcc' }
    - { name: 'libffi-devel' }
    - { name: 'libxml2-devel' }
    - { name: 'libxslt-devel' }
    - { name: 'mariadb-devel' }
    - { name: 'openssl-devel' }
    - { name: 'python-virtualenv' }

- name: Create virutal env
  pip:
    virtualenv: "/tmp/ansible_venv"
    name: "{{ item.name }}"
    extra_args: '--upgrade'
  with_items:
    - { name: 'pip' }
    - { name: 'setuptools' }
    - { name: 'ansible' }
    - { name: 'pytz' }
    - { name: 'shade' }
    - { name: 'functools32' }
