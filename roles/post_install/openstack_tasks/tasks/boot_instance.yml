---

- name: Get external Network ID
  vars:
    ansible_python_interpreter: "/tmp/ansible_venv/bin/python"
  os_networks_facts:
    cloud: overcloud
    filters:
      router:external: true
  register: external_network_id

- name: Get internal Network ID
  vars:
    ansible_python_interpreter: "/tmp/ansible_venv/bin/python"
  os_networks_facts:
    cloud: overcloud
    filters:
      router:external: false
  register: internal_network_id

- name: Create keypair
  vars:
    ansible_python_interpreter: "/tmp/ansible_venv/bin/python"
  os_keypair:
    cloud: overcloud
    state: present
    name: ansible_key
  register: keypair

- name: Create security group
  vars:
    ansible_python_interpreter: "/tmp/ansible_venv/bin/python"
  os_security_group:
    cloud: overcloud
    name: nfv-test
    description: The security group used for nfv tempest testing
    state: present

- name: Add ICMP and SSH protocols
  vars:
    ansible_python_interpreter: "/tmp/ansible_venv/bin/python"
  os_security_group_rule:
    cloud: overcloud
    security_group: nfv-test
    protocol: "{{ item.protocol }}"
    port_range_min: "{{ item.port_range_min }}"
    port_range_max: "{{ item.port_range_max }}"
    remote_ip_prefix: 0.0.0.0/0
  with_items:
    - { protocol: icmp, port_range_min: -1, port_range_max: -1 }
    - { protocol: tcp, port_range_min: 22, port_range_max: 22 }

- name: Create a new instance
  vars:
    ansible_python_interpreter: "/tmp/ansible_venv/bin/python"
  os_server:
    state: present
    cloud: overcloud
    name: "{{ item.name }}"
    image: "{{ item.image | default(images[0].name) }}"
    flavor: "{{ item.flavor | default(flavors[0].name) }}"
    key_name: ansible_key
    security_groups: nfv-test
    nics:
      - net-id: "{{ external_network_id.ansible_facts.openstack_networks.0.id }}"
      - net-id: "{{ internal_network_id.ansible_facts.openstack_networks.0.id }}"
      - net-id: "{{ internal_network_id.ansible_facts.openstack_networks.1.id }}"
  with_items:
    - "{{ instances }}"
  register: instance_id

- name: Copy private key from generated keypair
  copy:
    content: "{{ keypair.key.private_key }}"
    dest: "/tmp/private_key"
    mode: "0600"
    force: yes
  when: keypair.changed
  delegate_to: localhost
  become: false

- name: Add host to dynamic inventory
  add_host:
    name: "{{ item.item.name }}"
    group: "{{ group_name }}"
    ansible_ssh_host: "{{ item.openstack.addresses.external[0].addr }}"
    ansible_ssh_user: cloud-user
    ansible_ssh_port: 22
    ansible_ssh_private_key_file: "/tmp/private_key"
  with_items:
    - "{{ instance_id.results }}"

- name: Wait for the instance to boot up
  wait_for:
    host: "{{ item.openstack.addresses.external[0].addr }}"
    search_regex: "OpenSSH"
    port: 22
    timeout: 300
    connect_timeout: 50
    delay: 5
  delegate_to: localhost
  become: false
  with_items:
    - "{{ instance_id.results }}"
