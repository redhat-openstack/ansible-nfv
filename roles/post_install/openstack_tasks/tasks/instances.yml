---

- name: "Instances {{ resource_state }}"
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python"
  os_server:
    state: "{{ resource_state }}"
    cloud: "{{ overcloud_name }}"
    name: "{{ item.name }}"
    image: "{{ item.image | default(images[0].name) }}"
    flavor: "{{ item.flavor | default(flavors[0].name) }}"
    key_name: "{{ item.key_name }}"
    security_groups: "{{ item.sec_groups }}"
    userdata: "{{ userdata | default(omit) }}"
    config_drive: "{{ item.config_drive | default(True) }}"
    nics: "{{ item.nics }}"
    auto_ip: 'no'
  with_items:
    - "{{ instances }}"
  register: reg_instance

- name: Add floating IP to an instance
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python"
  os_floating_ip:
    state: "{{ resource_state }}"
    cloud: "{{ overcloud_name }}"
    server: "{{ item.name }}"
    network: "{{ item.floating_ip.ext_net }}"
    nat_destination: "{{ item.floating_ip.int_net }}"
    reuse: 'yes'
  with_items:
    - "{{ instances }}"
  when: item.floating_ip is defined

- name: Add instances to dynamic inventory
  add_host:
    name: "{{ item.0.item.name }}"
    group: "{{ item.1.groups | default(omit) }}"
    ansible_host: "{{ item.0.openstack.accessIPv4 }}"
    ansible_user: "{{ item.1.connection_user | default(connection_user) }}"
    ansible_ssh_port: 22
    ansible_ssh_private_key_file: "/tmp/{{ keypair_name }}.key"
  with_together:
    - "{{ reg_instance.results }}"
    - "{{ instances }}"
  when: resource_state == 'present'
