- name: tempest.conf file creation
  vars:
    additional_params: |
        {% if tempest_options is defined %}
          {% for option in tempest_options %}
            {{ option }}
          {% endfor %}
        {% endif %}
        {% if generate_accounts %}
          auth.test_accounts_file {{ accounts_file_path }}
          auth.use_dynamic_credentials false
          nfv_plugin_options.external_resources_output_file {{ external_resources_output_file }}
        {% endif %}
        {% if enable_test_all_provider_networks %}
          nfv_plugin_options.test_all_provider_networks true
        {% endif %}
        identity.uri {{ rc_vars.osp_auth }}
        identity.admin_password {{ rc_vars.osp_password }}
        nfv_plugin_options.overcloud_node_pkey_file {{ container_tempest }}/{{ ssh_key }}
        nfv_plugin_options.overcloud_node_pkey_file_rsa {{ container_tempest }}/{{ ssh_key }}
        nfv_plugin_options.undercloud_rc_file {{ container_tempest }}/stackrc
        compute.min_microversion {{ min_microversion }}
        compute.max_microversion {{ max_microversion }}
        DEFAULT.use_stderr true
    image_name: |
        {% if image_for_tempest| bool %}
        {{ images[0].url | basename }}
        {% endif %}
    external_network: |
        {% if external_net_id %}
        {{ tempest_net_id.openstack_networks.0.id }}
        {% endif %}
    flavor_name: |
        {% if tempest_flavor_name is defined %}
        {{ reg_flavors.results.0.id }}
        {% endif %}
  containers.podman.podman_container:
    name: tempest_nfv
    image: "{{ container_image }}:{{ container_version | default('latest') }}"
    command: /bin/bash -c './config_generate.sh'
    volume:
      - "{{ tempest_dir }}:{{ container_tempest }}:Z"
      - "{{ tempest_dir }}/{{ tempest_etc_dir }}:{{ container_etc }}:Z"
    env:
      deployer_input: deployer_input.ini
      additional_params: "{{ additional_params | default(omit) }}"
      image_name: "{{ image_name | default(omit) }}"
      external_network: "{{ external_network | default(omit) }}"
      flavor_name: "{{ flavor_name | default(omit) }}"
    detach: false
    rm: true
    privileged: true

- name: Enable unprivileged ping
  ansible.posix.sysctl:
    name: net.ipv4.ping_group_range
    value: '0 2000000'
    state: present
    sysctl_set: yes
  become: true

- name: Execute the tempest tests and save the results
  containers.podman.podman_container:
    name: tempest_nfv
    image: "{{ container_image }}:{{ container_version | default('latest') }}"
    volume:
      - "{{ tempest_dir }}:{{ container_tempest }}:Z"
      - "{{ tempest_dir }}/{{ tempest_etc_dir }}:{{ container_etc }}:Z"
      - "/etc/pki/:/etc/pki/"
    network: host
    detach: false
    rm: true
    privileged: true
    command: >
      stestr run --serial --subunit
      {% if tests_regex %}{{ tests_regex }}{% endif %}
      {% if overcloud_version | int >= 16 and tests_include_list %}--include-list {{ container_tempest }}/{{ tests_include_list | basename }}
      {% elif tests_include_list %}--whitelist-file {{ container_tempest }}/{{ tests_include_list | basename }}{% endif %}
  register: test_run

- name: write results to file
  copy:
    dest: "{{ tempest_dir }}/tempest_results.subunit"
    content: "{{ test_run.stdout }}"
    mode: 0777

- name: write tempest.log
  copy:
    dest: "{{ tempest_dir }}/tempest.log"
    content: "{{ test_run.stderr }}"
    mode: 0777
