- name: write regex to regex file
  copy:
    dest: "{{ tempest_dir }}/regression_tests.conf"
    content: "{{ tests_regex }}"
    mode: 0755
  when: tests_regex | length > 0

- name: tempest.conf file creation
  vars:
    additional_params: |
        {% if tempest_options is defined %}
          {% for option in tempest_options %}
            {{ option }}
          {% endfor %}
        {% endif %}
        {% if container_accounts_file_path is defined %}
        auth.test_accounts_file {{ container_accounts_file_path }}
        auth.use_dynamic_credentials false
        {% endif %}
        {% if generate_accounts %}
        nfv_plugin_options.external_resources_output_file {{ external_resources_output_file }}
        {% endif %}
        identity.uri {{ rc_vars.osp_auth }}
        identity.admin_password {{ rc_vars.osp_password }}
        {% if generate_accounts %}
        nfv_plugin_options.overcloud_node_pkey_file {{ container_tempest }}/{{ ssh_key }}
        nfv_plugin_options.overcloud_node_pkey_file_rsa {{ container_tempest }}/{{ ssh_key }}
        {% endif %}
        nfv_plugin_options.undercloud_rc_file {{ container_tempest }}/stackrc
        compute.min_microversion {{ min_microversion }}
        compute.max_microversion {{ max_microversion }}
        DEFAULT.use_stderr true
    image_name: |-
        {% if image_for_tempest| bool %}
        {{ images[0].url | basename }}
        {% endif %}
    external_network: |-
        {% if external_net_id %}
        {{ tempest_net_id['openstack_networks'][0]['id'] }}
        {% endif %}
    flavor_name: |-
        {% if tempest_flavor_name is defined %}
        {{ tempest_flavor_result['openstack_flavors'][0]['id'] }}
        {% endif %}
  containers.podman.podman_container:
    name: nfv-tempest
    image: "{{ container_image }}:{{ container_version | default('latest') }}"
    command: /bin/bash -c './config_generate.sh'
    volume:
      - "{{ tempest_dir }}:{{ container_tempest }}:z"
      - "{{ tempest_dir }}/{{ tempest_etc_dir }}:{{ container_etc }}:z"
    env:
      deployer_input: deployer_input.ini
      additional_params: "{{ additional_params | default(omit) }}"
      image_name: "{{ image_name | default(omit) }}"
      external_network: "{{ external_network | default(omit) }}"
      flavor_name: "{{ flavor_name | default(omit) }}"
    detach: false
    rm: true
    privileged: true

- name: Enable unprivileged ping
  ansible.posix.sysctl:
    name: net.ipv4.ping_group_range
    value: '0 2000000'
    state: present
    sysctl_set: yes
  become: true

- name: Execute the tempest tests and save the results
  containers.podman.podman_container:
    name: nfv-tempest
    image: "{{ container_image }}:{{ container_version | default('latest') }}"
    volume:
      - "{{ tempest_dir }}:{{ container_tempest }}:z"
      - "{{ tempest_dir }}/{{ tempest_etc_dir }}:{{ container_etc }}:z"
      - "/etc/pki/:/etc/pki/"
    network: host
    detach: false
    rm: true
    privileged: true
    command: /opt/app-root/run_tempest.sh regression_tests.conf
  register: podman_run

- name: write tempest.log
  copy:
    dest: "{{ tempest_dir }}/tempest.log"
    content: "{{ podman_run.stderr }}"
    mode: 0777
