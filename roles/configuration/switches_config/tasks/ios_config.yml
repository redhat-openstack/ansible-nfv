---
- name: Set login banner
  cisco.ios.ios_banner:
    banner: motd
    text: "{{ switch_vars['switch_banner'] }}"
    state: present
  when: "'switch_banner' in switch_vars"

- name: Configure DHCP Relay
  cisco.ios.ios_config:
    lines:
      - ip dhcp relay information option
      - ip dhcp relay information {{ switch_vars['dhcp_relay'] }}
  when: "'dhcp_relay' in switch_vars"

- name: Set VLANs
  vars:
    vlan_config: |
      {% for vlan in vlan_list %}
      - name: "vlan{{ vlan }}"
        vlan_id: "{{ vlan }}"
      {% endfor %}
  cisco.ios.ios_vlans:
    config: "{{ vlan_config | from_yaml }}"
    state: merged

- name: Advanced VLAN Interface Configuration
  when: "'vlan_interfaces' in switch_vars"
  block:
    - name: Configure IP Address For Vlan Interface
      cisco.ios.ios_config:
        lines: ip address {{ item['ip_address'] }} {{ item['netmask'] }}
        parents: "interface {{ item['iface'] }}"
      loop: "{{ switch_vars['vlan_interfaces'] }}"
      when:
        - "'ip_address' in item"
        - "'netmask' in item"
    - name: Configure IP Helper Address For Vlan Interface
      cisco.ios.ios_config:
        lines: |
          {%- set commands = [] -%}
          {%- if item['ip_helper_address'] | type_debug == 'string' -%}
          {{ commands.append('ip helper-address ' + item['ip_helper_address']) }}
          {%- elif item['ip_helper_address'] | type_debug == 'list' -%}
          {%- for helper in item['ip_helper_address'] -%}
          {{ commands.append('ip helper-address ' + helper) }}
          {%- endfor -%}
          {%- endif -%}
          {{ commands }}
        parents: "interface {{ item['iface'] }}"
      loop: "{{ switch_vars['vlan_interfaces'] }}"
      when: "'ip_helper_address' in item"

- name: Configure route-maps
  when: "'route_maps' in switch_vars"
  block:
    # Native Ansible module 'ios_route_maps' shipped with collection
    # 'cisco.ios' did not appear to work on tested Cisco switch
    # (Catalyst 3750)
    # We support a specific scenario for route-map
    - name: Assign route-map To Interface
      cisco.ios.ios_config:
        lines:
          - match ip address {{ item['match_ip_address'] }}
          - set ip next-hop {{ item['ip_next_hop'] }}
        parents: "route-map {{ item['route_map_name'] }} permit 10"
      loop: "{{ switch_vars['route_maps'] }}"
    - name: Assign route-map To Interface
      cisco.ios.ios_config:
        lines: ip policy route-map {{ item['route_map_name'] }}
        parents: "interface {{ item['interface'] }}"
      loop: "{{ switch_vars['route_maps'] }}"

- name: Set interface description and MTU
  vars:
    interface_config: |
      {% for interface in switch_vars['interfaces'] %}
      - name: "{{ interface.iface }}"
        description: "{{ interface.description }}"
        mtu: "{{ interface.mtu | default(omit) }}"
      {% endfor %}
  cisco.ios.ios_interfaces:
    config: '{{ interface_config | from_yaml }}'
    state: merged

- name: Configure interfaces - mode (access/trunk), vlans
  vars:
    interface_config: |
      {% for interface in switch_vars['interfaces'] %}
      - name: "{{ interface.iface }}"
        mode: "{{ interface.iface_mode }}"
        {{ interface.iface_mode }}:
      {% if interface.iface_mode == 'trunk' and interface.native_vlan is defined %}
          native_vlan: "{{ interface.native_vlan }}"
      {% endif %}
      {% if interface.iface_mode == 'trunk' %}
          allowed_vlans: "{{ interface.vlan }}"
          encapsulation: dot1q
      {% endif %}
      {% if interface.iface_mode == 'access' %}
          vlan: "{{ interface.vlan }}"
      {% endif %}
      {% endfor %}
  cisco.ios.ios_l2_interfaces:
    config: "{{ interface_config | from_yaml }}"
    state: replaced

- name: Save configuration
  cisco.ios.ios_config:
    save_when: always
