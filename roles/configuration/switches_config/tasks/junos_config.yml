---

# Workaround since Ansible modules lock the database similar to `configure exclusive`
- name: "Random Duration Pause to Avoid Database Conflicts"
  pause:
    seconds: "{{ 90 | random(step=6) }}"

- name: Junos configuration block
  block:
    - name: Set login banner
      junos_config:
        lines:
          - "set system login message \"{{ switch_vars['switch_banner'] }}\""
      when: "'switch_banner' in switch_vars"
      retries: 3
      delay: 5

    - name: Set VLANs
      junos_config:
        lines:
          - "set vlans vlan{{ item }} vlan-id {{ item }}"
      loop: "{{ vlan_list }}"
      retries: 3
      delay: 5

    - name: Configure interfaces - description, mode (access/trunk), vlans
      junos_config:
        lines: |
          {%- set commands = [] -%}
          {%- set commands = commands + ["set interfaces " + item.iface + " description \"" + item.description + "\""] -%}
          {%- if item.iface_mode == 'access' -%}
            {%- set commands = commands + ["set interfaces " + item.iface + " unit 0 family ethernet-switching interface-mode access"] -%}
            {%- set commands = commands + ["set interfaces " + item.iface + " unit 0 family ethernet-switching vlan members vlan" + item.vlan|string] -%}
          {%- elif item.iface_mode == 'trunk' -%}
            {%- set commands = commands + ["set interfaces " + item.iface + " unit 0 family ethernet-switching interface-mode trunk"] -%}
            {%- if item.vlan == 'all' -%}
              {%- set commands = commands + ["set interfaces " + item.iface + " unit 0 family ethernet-switching vlan members all"] -%}
            {%- else -%}
              {%- set vlan_list = [] -%}
              {%- if ',' in item.vlan -%}
                {%- for vlan in item.vlan.replace(' ', '').split(',') -%}
                  {%- if '-' in vlan -%}
                    {%- for v in range(vlan.split('-')[0] | int, vlan.split('-')[1] | int + 1) -%}
                      {%- set vlan_list = vlan_list + [v] -%}
                    {%- endfor -%}
                  {%- else -%}
                    {%- set vlan_list = vlan_list + [vlan|int] -%}
                  {%- endif -%}
                {%- endfor -%}
              {%- else -%}
                {%- if '-' in item.vlan -%}
                  {%- for v in range(item.vlan.split('-')[0] | int, item.vlan.split('-')[1] | int + 1) -%}
                    {%- set vlan_list = vlan_list + [v] -%}
                  {%- endfor -%}
                {%- else -%}
                  {%- set vlan_list = vlan_list + [item.vlan|int] -%}
                {%- endif -%}
              {%- endif -%}
              {%- for vlan in vlan_list | unique -%}
                {%- set commands = commands + ["set interfaces " + item.iface + " unit 0 family ethernet-switching vlan members vlan" + vlan|string] -%}
              {%- endfor -%}
            {%- endif -%}
            {%- if 'native_vlan' in item -%}
              {%- set commands = commands + ["set interfaces " + item.iface + " native-vlan-id " + item.native_vlan|string] -%}
            {%- endif -%}
          {%- endif -%}
          {{ commands }}
      loop: "{{ switch_vars.interfaces }}"
      when: "'interfaces' in switch_vars"
      retries: 3
      delay: 5

    - name: Set MTU value on the interface
      junos_config:
        lines:
          - "set interfaces {{ item.iface }} mtu {{ item.mtu }}"
      loop: "{{ switch_vars.interfaces }}"
      when: item.mtu is defined
      retries: 3
      delay: 5

    # LACP aggregation can't override existing configuration
    # that is not LACP related on the memeber interfaces.
    # Required to delete the config before setting the LACP dependency interface.
    - name: Reset LACP member interface
      junos_config:
        lines:
          - "delete interfaces {{ item.1 }}"
      loop: "{{ switch_vars.interfaces | subelements('aggr_members', 'skip_missing=True') }}"
      when: item.0.aggr_members is defined
      retries: 3
      delay: 5

    - name: Set aggregation for the interface
      junos_config:
        lines: |
          {%- set commands = [] -%}
          {%- set commands = commands + ["set interfaces " + item.iface + " description \"" + item.description + "\""] -%}
          {%- set commands = commands + ["set interfaces " + item.iface + " aggregated-ether-options lacp active"] -%}
          {%- for member in item.aggr_members -%}
            {%- set commands = commands + ["set interfaces " + member + " gigether-options 802.3ad " + item.iface] -%}
          {%- endfor -%}
          {{ commands }}
      loop: "{{ switch_vars.interfaces }}"
      when: item.aggr_members is defined
      retries: 3
      delay: 5

    # For each vlan for which igmp snooping is configured, remove previous
    # configuration if it exists to ensure that applied configuration is
    # as specified in configuration file
    - name: Configure IGMP snooping
      block:
        - name: Reset IGMP snooping for each defined vlan
          junos_config:
            lines:
              - delete protocols igmp-snooping vlan vlan{{ item.vlan }}
          loop: "{{ switch_vars.igmp_snooping }}"
          when: item.vlan is defined
          retries: 3
          delay: 10

        - name: Create IGMP querier for each defined vlan
          junos_config:
            lines:
              - "set protocols igmp-snooping vlan vlan{{ item.vlan }}
                 l2-querier source-address {{ item.ip_address }}"
          loop: "{{ switch_vars.igmp_snooping }}"
          when: item.vlan is defined and item.ip_address is defined
          retries: 3
          delay: 10

        - name: Configure interfaces in which IGMP queries are broadcasted
          junos_config:
            lines:
              - "set protocols igmp-snooping vlan vlan{{ item.0.vlan }}
                 interface {{ item.1 }}"
          loop: "{{ switch_vars.igmp_snooping | default([]) |
                 subelements('interfaces', 'skip_missing=True') }}"
          when: item.0.vlan is defined and item.0.interfaces is defined
          retries: 3
          delay: 10
      when: switch_vars.igmp_snooping is defined

    - name: Configure Layer3(irb) Interfaces
      block:
        - name: Ensure irb Interface is configured
          junos_config:
            lines:
              - "set interfaces irb unit {{ item['unit'] }} family inet address {{ item['ipv4_address'] }}"
          loop: "{{ switch_vars['layer3_interfaces'] }}"
          retries: 3
          delay: 5
        - name: Assign irb Interface To VLAN Interface
          junos_config:
            lines:
              - "set vlans {{ item['vlan_interface'] }} l3-interface irb.{{ item['unit'] }}"
          loop: "{{ switch_vars['layer3_interfaces'] }}"
          retries: 3
          delay: 5
      when: "'layer3_interfaces' in switch_vars"

    - name: Save configuration
      junos_config:
        confirm_commit: yes
      retries: 5
      delay: 15

  rescue:
    - name: Configuration rollback
      junos_config:
        rollback: 1

    - name: Fail Play
      fail:
        msg: "Configuration was rollbacked, failing play."
