---
- name: Junos configuration block
  block:
    - name: Set login banner
      junos_banner:
        banner: motd
        text: "{{ switch_banner }}"
        state: present

    - name: Set VLANs
      junos_vlan:
        name: "vlan{{ item }}"
        vlan_id: "{{ item }}"
        state: present
      loop: "{{ vlan_list }}"

    - name: Configure interfaces - description, mode (access/trunk), vlans
      vars:
        iface_vlans: "{%- if item.iface_mode == 'trunk' and '-' in item.vlan -%}
                      {{ item.vlan.split('-') }}
                      {%- endif -%}"
        iface_vlan_range: "{%- if iface_vlans -%}
                           {{ range(iface_vlans.0 | int, iface_vlans.1 | int + 1) | list }}
                           {%- endif -%}"
        vlans_string: "{%- if iface_vlan_range -%}
                       {% for item in iface_vlan_range %}vlan{{ item }} {% endfor %}
                       {%- elif item.vlan == 'all' -%}{{ item.vlan }}
                       {%- else -%}vlan{{ item.vlan }}{% endif %}"
        trunk_vlans_list: "{%- if vlans_string[0] is defined -%}
                           {{ vlans_string.split() }}{% else %}{{ item.vlan }}{% endif %}"
        access_vlan: "{%- if item.iface_mode == 'access' -%}
                      {{ item.vlan |regex_replace('^(.*)$', 'vlan\\1') }}
                      {%- endif -%}"
      junos_l2_interface:
        name: "{{ item.iface }}"
        description: "{{ item.description }}"
        mode: "{{ item.iface_mode }}"
        access_vlan: "{%- if item.iface_mode == 'access' -%}
                      {{ access_vlan }}{% else %}{{ omit }}{% endif %}"
        trunk_vlans: "{%- if item.iface_mode == 'trunk' -%}
                      {{ trunk_vlans_list }}{% else %}{{ omit }}{% endif %}"
        unit: 0
        state: present
      loop: "{{ switch_vars.interfaces }}"

    - name: Set MTU value on the interface
      junos_interface:
        name: "{{ item.iface }}"
        mtu: "{{ item.mtu }}"
        state: present
      loop: "{{ switch_vars.interfaces }}"
      when: item.mtu is defined

    # LACP aggregation can't override existing configuration
    # that is not LACP related on the memeber interfaces.
    # Required to delete the config before setting the LACP dependency interface.
    - name: Reset LACP member interface
      junos_interface:
        name: "{{ item.1 }}"
        state: absent
      loop: "{{ switch_vars.interfaces | subelements('aggr_members', 'skip_missing=True') }}"
      when: item.0.aggr_members is defined

    - name: Set aggregation for the interface
      junos_linkagg:
        name: "{{ item.iface }}"
        description: "{{ item.description }}"
        members: "{{ item.aggr_members }}"
        mode: active
      loop: "{{ switch_vars.interfaces }}"
      when: item.aggr_members is defined

    # For each vlan for which igmp snooping is configured, remove previous
    # configuration if it exists to ensure that applied configuration is 
    # as specified in configuration file
    - name: Reset IGMP snooping for each defined vlan
      junos_config:
        lines:
          - delete protocols igmp-snooping vlan vlan{{ item.vlan }}
      loop: "{{ switch_vars.igmp_snooping }}"
      when: item.vlan is defined

    - name: Create IGMP querier for each defined vlan
      junos_config:
        lines:
          - set protocols igmp-snooping vlan vlan{{ item.vlan }} l2-querier source-address {{ item.ip_address }}
      loop: "{{ switch_vars.igmp_snooping }}"
      when: item.vlan is defined and item.ip_address is defined

    - name: Configure interfaces in which IGMP queries are broadcasted
      junos_config:
        lines:
          - set protocols igmp-snooping vlan vlan{{ item.0.vlan }} interface {{ item.1 }}
      loop: "{{ switch_vars.igmp_snooping | subelements('interfaces') }}"
      when: item.0.vlan is defined and item.0.interfaces is defined

    - name: Save configuration
      junos_config:
        confirm_commit: yes

  rescue:
    - name: Configuration rollback
      junos_config:
        rollback: 1
