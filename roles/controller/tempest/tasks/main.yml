---

- shell: "cat {{ keystone }} | grep AUTH | cut -d '=' -f 2"
  register: osp_auth

- shell: "cat {{ keystone }} | grep USERNAME | cut -d '=' -f 2"
  register: osp_username

- shell: "cat {{ keystone }} | grep TENANT | cut -d '=' -f 2"
  register: osp_tenant

- shell: "cat {{ keystone }} | grep OS_PASSWORD | cut -d '=' -f 2"
  register: osp_password

- name: Install packages and dependency
  yum: 
    name: "{{ item.name }}"
    state: 'installed'
  with_items:
    - { name: 'git' }
    - { name: 'wget' }
    - { name: 'python-devel' }
    - { name: 'gcc' }
    - { name: 'libffi-devel' }
    - { name: 'libxml2-devel' }
    - { name: 'libxslt-devel' }
    - { name: 'mariadb-devel' }
    - { name: 'openssl-devel' }
    - { name: 'python-virtualenv' }
    - { name: '@Development tools' }

- name: Git clone Tempest & Tempest-NFV-plugin
  git: 
    repo: "{{ item.url }}"
    dest: "{{ item.dest }}"
    clone: yes 
    update: yes
  with_items:
    - { url: '{{ tempest_url }}', dest: "{{ tempest_dir }}/tempest" }
    - { url: '{{ plugin_url }}', dest: "{{ tempest_dir }}/tempest-nfv-plugin" }

- name: Run install_venv.py script
  command: 'python {{ tempest_dir }}/tempest/tools/install_venv.py'
  args:
    chdir: '{{ tempest_dir }}/tempest'

- name: Install Tempest_plugin in our Virtual env
  pip:
    name: '{{ tempest_dir }}/tempest-nfv-plugin/tempest_plugin/'
    virtualenv: '{{ tempest_dir }}/tempest/.venv'
    extra_args: -e

- name: Copy requirments file
  copy:
    src: pip_ansible_openstack_packages.txt
    dest: '{{ tempest_dir }}' 

- name: Install requirments for ansible
  pip:
    name: '{{ tempest_dir }}/pip_ansible_openstack_packages.txt'
    virtualenv: '{{ tempest_dir }}/tempest/.venv'
    extra_args: -r

- name: Create the clouds.yml file for future tasks
  template:
    src: "clouds.yml.j2"
    dest: "/etc/openstack/clouds.yml"
    mode: 0755

- name: Get network-id
  vars:
    ansible_python_interpreter: "/mnt/tempest/.venv/bin/python"
  os_networks_facts:
    cloud: openstack
    name:  external
- debug: var=openstack_networks

- name: Run config_tempest script
  vars:
    ansible_python_interpreter: "/mnt/tempest/.venv/bin/python"
  shell: '{{ tempest_dir }}/tempest/.venv/bin/python {{ tempest_dir }}/tempest/tools/config_tempest.py --create --debug --image {{ osp_image }} identity.uri {{ osp_auth.stdout }} identity.admin_password {{ osp_password.stdout }}  --network-id {{ openstack_networks.id }}'
  args:
    chdir: '{{ tempest_dir }}/tempest'

- name: Changing the image_ssh_user value
  lineinfile:
    dest: /mnt/tempest/etc/tempest.conf
    regexp: "^image_ssh_user"
    line: "image_ssh_user = {{ image_ssh_user }}"

- name: Adding port_vnic_type variable
  ini_file:
    dest: /mnt/tempest/etc/tempest.conf
    section: network
    option: port_vnic_type
    value: direct
  when: port_vnic_type == True

