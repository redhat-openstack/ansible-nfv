- name: Query Trex Server Ports
  import_role:
    name: roles/post_install/discover_instance_ports
  vars:
    query_instance: "{{ trex_instance }}"
    discover_instance_external_ip: True

- name: Set Trex Management IP If Discovered
  set_fact:
    trex_instance_mgmt_ip: "{{ instance_external_ip }}"
  when: not trex_instance_mgmt_ip | default(False)

- name: Parse Trex Server SR-IOV NICs
  set_fact:
    trex_instance_sriov_nics: "{{ trex_instance_sriov_nics | default([]) }} + [ {{ item }} ]"
  loop: "{{ instance_nics | flatten(levels=1) }}"
  when: item['binding:vnic_type'] != "normal"
  failed_when: trex_instance_sriov_nics == []

- name: Fail If There Are More Than 2 SR-IOV NICs
  fail:
    msg: "Current flow only supports 2 SR-IOV NICs connected to intance, please provide an instance with the allowed number of NICs"
  failed_when: trex_instance_sriov_nics | length != 2

- name: Assign Trex Instance To Inventory
  include_role:
    name: roles/packet_gen/trex/assign_trex_to_inventory

- name: Parse Trex Server Interfaces Attached To Kernel From Ansible Facts
  set_fact:
    trex_instance_kernel_nics: "{{ trex_instance_kernel_nics | default([]) }} + [{{ hostvars[trex_instance_mgmt_ip]['ansible_%s' | format(item)] }}]"
  loop: "{{ hostvars[trex_instance_mgmt_ip]['ansible_interfaces'] | flatten(levels=1) }}"
  when: hostvars[trex_instance_mgmt_ip]['ansible_%s' | format(item)]['macaddress'] is defined