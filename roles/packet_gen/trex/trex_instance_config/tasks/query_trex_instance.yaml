- name: Query Trex Server Ports
  import_role:
    name: roles/post_install/discover_instance_ports
  vars:
    query_instance: "{{ ansible_hostname }}"
  delegate_to: localhost
- debug:
    var: instance_nics | flatten(levels=1)
- name: Parse Trex Server SR-IOV NICs
  set_fact:
    trex_instance_sriov_nics: "{{ trex_instance_sriov_nics | default([]) + [item] }}"
  loop: "{{ instance_nics | flatten(levels=1) }}"
  when: item['binding_vnic_type'] == "direct-physical" or
        item['binding_vnic_type'] == "direct"
- name: Fail If There Are More/Less Than 2 SR-IOV NICs
  fail:
    msg: "Current automated flow only supports 2 SR-IOV NICs connected to intance, please provide an instance with the allowed number of NICs"
  when: trex_instance_sriov_nics | length != 2

- name: "Check if DPDK Directory Exists on  Trex Instance"
  stat:
    path: "{{ dpdk_root_dir }}"
  register: dpdk_dir
  failed_when: not dpdk_dir['stat']['exists']
  become: True

- name: Retrieve info From dpdk-devbind script
  shell: "python {{ dpdk_root_dir }}/usertools/dpdk-devbind.py --status"
  register: dpdk_devbind_info
  become: true

- name: Check Existence Of Performance Ansible Local Facts
  stat:
    path: /etc/ansible/facts.d/nic_topology.fact
  become: true
  register: trex_nics_topology_fact_file

- name: Dump Performance Facts To Ansible Local Facts
  block:
    - name: Create Local Facts Directory
      file:
        path: /etc/ansible/facts.d
        state: directory
        recurse: True
      become: True
    - name: Retrieve NICs Gathered By Ansible Facts
      set_fact:
        ans_nics: "{{ ans_nics | default([]) + [{'name': item, 'mac_address': ansible_facts[item]['macaddress'], 'pci_slot': dpdk_devbind_info['stdout'] | regex_search('[0-9]{4}:[0-9]{2}:[0-9]{2}.*if=' + item,multiline=true) | regex_search('[0-9]{4}:[0-9]{2}:[0-9]{2}.[0-9]')}] }}"
      loop: "{{ ansible_interfaces | difference(['lo']) }}"
    - name: Dump Content To File
      copy:
        content: "{{ ans_nics }}"
        dest: /etc/ansible/facts.d/nic_topology.fact
      become: true

    - name: Gather Ansible Facts
      setup:
        #  when: not trex_nics_topology_fact_file['stat']['exists']

- name: Deactivate Non External Kernel NICs
  shell: "ip link set dev {{ item }} down"
  loop: "{{ ansible_interfaces | difference(['lo', ansible_default_ipv4['alias']]) }}"
  become: True
