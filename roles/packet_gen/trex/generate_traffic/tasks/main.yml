- name: Clone trafficgen Project
  git:
    repo: "{{ trafficgen_repo }}"
    dest: "{{ trafficgen_dir }}"
  when: trafficgen_repo_checkout
  delegate_to: "{{ trex_instance_mgmt_ip }}"

- name: Bind Nics To DPDK
  include_tasks: bind_dpdk_nics.yml
  loop:
    - "{{ dut_instance_mgmt_ip }}"
    - "{{ trex_instance_mgmt_ip }}"
  when: nics_bind_dpdk

- name: Launch Trex
  import_tasks: launch_trex.yml
  when: launch_trex
  delegate_to: "{{ trex_instance_mgmt_ip }}"

- name: Launch TestPMD
  import_tasks: launch_testpmd.yml
  when: launch_testpmd
  delegate_to: "{{ dut_instance_mgmt_ip }}"

- name: Set Binary Search Command
  set_fact:
    traffic_cmd: >
      {{ binary_search_bin }} --traffic-generator trex-txrx
      --frame-size {{ trex_frame_size }}
      --max-loss-pct {{ trex_max_lost_pct }}
      --send-teaching-warmup
      --dst-macs {{ dut_macs }}
      --num-flows {{ trex_flows }}
      {% if dut_type == 'dpdk' %}
        --rate {{ trex_rate }}
      {% endif %}
  when: traffic_cmd is not defined

# TODO: Proper print function
- name: Run Binary Search Script
  shell: "{{ traffic_cmd }}"
  delegate_to: "{{ trex_instance_mgmt_ip }}"
  register: perf_output
  failed_when: False
  changed_when: False
  become: True

- debug:
    var: perf_output

- name: Save Binary Search Script Result To File
  copy:
    content: "{{ perf_output['stdout'] }}"
    dest: "{{ binary_perf_log }}"

- name: Parse JSON Result From Output File
  shell: "cat {{ binary_perf_log }} | sed -e '0,/RESULT/ d' | sed 's/\\[.*\\] //g' | jq ."
  register: perf_result
  when: perf_output['rc'] == 0

# TODO: Add additional valuable information for both states
- name: Print Performance Result
  debug:
    msg: |
      binary-search command:
      {{ perf_output['cmd'] }}

      {% if perf_output.rc == 0 %}

      Performance Flow Succeded

      {% else %}

      Performance Flow Failed

      {% endif %}
  failed_when: perf_output['rc'] != 0