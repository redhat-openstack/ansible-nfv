- name: Check If Tmux Sessions Are Running
  shell: "tmux list-sessions -F '#S'"
  register: tmux_sessions
  failed_when: False

- name: Kill Tmux Sessions
  shell: "tmux list-sessions -F '#S' | xargs -n1 tmux kill-session -t"
  when: tmux_sessions['stdout_lines'] != []

- name: Parse TRex MACs
  set_fact:
    trex_macs: "{{ (hostvars[(groups['trex'] | first) ]['trex_instance_nics_info'])|map(attribute='mac_address')|list|join(',') }}"
  when:
    - hostvars[(groups['trex'] | first) ]['trex_instance_nics_info'] is defined
    - trex_macs is not defined

- name: Set TestPMD Command If Not Defined
  set_fact:
    testpmd_cmd: |
      {{ testpmd_bin }} -l {{ testpmd_lcores }} \
      --socket-mem {{ testpmd_socket_mem }} -- -i \
      --nb-cores={{ testpmd_forward_cores }} \
      --auto-start \
      {% if multiqueue_set is defined and multiqueue_set %}
        --rxq={{hostvars[dut_compute]['multiqueue']}} \
        --txq={{hostvars[dut_compute]['multiqueue']}} \
      {% endif %}
      {% if forward_mode == 'mac' %}
        --forward-mode=mac \
        --eth-peer=0,{{ trex_macs.split(',')[0] }} \
        --eth-peer=1,{{ trex_macs.split(',')[1] }} \
      {% endif %}
      --rxd={{ testpmd_rxd }} \
      --txd={{ testpmd_txd }} &>/tmp/testpmd.log
  when: testpmd_cmd is not defined

- name: Log testpmd Command
  debug:
    var: testpmd_cmd

- name: Run testpmd In Dettached Tmux Session
  shell: |
    tmux new -d -s testpmd
    tmux send-keys -t testpmd "{{ testpmd_cmd }}" ENTER
    tmux send-keys -t testpmd "show port stats all" ENTER
  become: True

- name: Pause And Let TestPMD Run
  pause:
    seconds: 10

- name: Query If TestPMD Aborted
  slurp:
    src: '/tmp/testpmd.log'
  register: testpmd_log_output

- name: Print TestPMD Error
  fail:
    msg: "{{ testpmd_log_output['content'] | b64decode }}"
  failed_when: "'PANIC' in testpmd_log_output['content'] | b64decode"
