# TODO (vkhitrin): Refactor tasks to fetch MACs in single play
- name: Parse DuT MACs
  set_fact:
    dut_macs: "{{ hostvars[groups[dut_group][0]]['dut_macs'] }}"
  when:
    - hostvars[groups[dut_group][0]]['dut_macs'] is defined
    - dut_macs is not defined

- name: Set Binary Search Command
  set_fact:
    traffic_cmd: >
      {{ binary_search_bin }} --traffic-generator trex-txrx
      --frame-size {{ trex_frame_size }}
      --max-loss-pct {{ trex_max_lost_pct }}
      --send-teaching-warmup
      --dst-macs {{ dut_macs }}
      --num-flows {{ trex_flows }}
      {% if dut_type == 'dpdk' %}
        --rate {{ trex_rate }}
      {% endif %}
  when: traffic_cmd is not defined

# TODO: Proper print function
- name: Run Binary Search Script
  shell: "{{ traffic_cmd }}"
  register: perf_output
  failed_when: False
  become: True

- debug:
    var: perf_output

- name: Save Binary Search Script Result To File
  copy:
    content: "{{ perf_output['stdout'] }}"
    dest: "{{ binary_perf_log }}"
  delegate_to: "{{ groups['undercloud'] | first }}"

- name: Stop TestPMD On DuT
  shell: "tmux list-sessions -F '#S' | xargs -n1 tmux kill-session -t"
  become: True
  delegate_to: "{{ groups[dut_group] | first }}"

- name: Parse JSON Result From Output File
  block:
    - name: Read Performance Result Log
      slurp:
        src: "{{ binary_perf_log }}"
      register: perf_result

    - name: Parse Perfomance Log To JSON Format
      set_fact:
        perf_json: "{{ perf_result['content'] | b64decode | replace('RESULT', '') }}"

- name: Print Perfomance Result JSON
  debug:
    var: perf_json

# TODO: Add additional valuable information for both states
- name: Print Performance Result
  debug:
    msg: |
      binary-search command:
      {{ perf_output['cmd'] }}

      {% if perf_output.rc == 0 %}

      Performance Flow Succeded

      {% else %}

      Performance Flow Failed

      {% endif %}
  failed_when: perf_output['rc'] != 0
